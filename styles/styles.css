h1 {
  margin-top: 0;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

form {
  margin: 0 auto;
  width: 400px;
  padding: 1em;
  border: 1px solid #CCC;
  border-radius: 1em;
}

div+div {
  margin-top: 1em;
}

label span {
  display: inline-block;
  width: 120px;
  text-align: right;
}

input, textarea {
  font: 1em sans-serif;
  width: 250px;
  box-sizing: border-box;
  border: 1px solid #999;
}

input[type=checkbox], input[type=radio] {
  width: auto;
  border: none;
}

input:focus, textarea:focus {
  border-color: #000;
}

textarea {
  vertical-align: top;
  height: 5em;
  resize: vertical;
}

fieldset {
  width: 250px;
  box-sizing: border-box;
  margin-left: 136px;
  border: 1px solid #999;
}

button {
  margin: 20px 0 0 124px;
}

label {
position: relative;
}

/* Legend

> - the child combinator
+ - the adjacent sibling combinator
~ - the general sibling combinator */

/* Selecting every single div with a descendant combinator */

/* main div {

} */

/* Child combinator in effect ( > ) */

/* main > div {
  Select all child 'class' of div within main
}

main > div > div {
  Basically selecting the grand-children of main
  or all the children of main's children with a 'class' of div
}

Adjacent selector ( + ) will select neighbors of the element we target

.group1 + div {
  Selects group1 by class name and any adjacent element or adjacent sibling, so group2
}

.group + div + div {
  Here we move or skip a neighbor and jump from group2 over to group3 starting from group1
  group3 is an adjacent of group1's adjacent which is what we were looking for
}

General sibling combinator ( ~ )

.group1 ~ div {
  Selects all siblings / neighbors of class name div group1
} */